@page "/locations/new"
@using System.ComponentModel.DataAnnotations
@using KriosManufacturing.Core.Models
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ILogger<New> logger

<PageTitle>Location</PageTitle>

<h1>New Location</h1>
<MudButton Class="my-5" Href="/locations" Variant="Variant.Filled" Color="Color.Tertiary">
    <MudIcon Size="Size.Small" Icon="@Icons.Material.Outlined.ArrowBack" />
    All locations
</MudButton>

<EditForm Model="@_newForm" OnValidSubmit="Submit" FormCell="NewLocationForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Unit" HelperText="Required. Max 16 characters." @bind-Value="_newForm.Unit"
                    For="@(() => _newForm.Unit)" />
                <MudTextField Label="Cell" Class="mt-3" HelperText="Required. Max 16 characters."
                    @bind-Value="_newForm.Cell" For="@(() => _newForm.Cell)" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                    Class="ml-auto">Submit</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</EditForm>

@code {
    private NewLocationForm _newForm = new();

    public class NewLocationForm
    {
        [Required][StringLength(16)] public string? Unit { get; set; }

        [Required][StringLength(16)] public string? Cell { get; set; }
    }

    private async Task Submit()
    {
        var result = await Http.PostAsJsonAsync($"/api/v1/locations", _newForm);
        logger.LogInformation(result.ToString());
        if (result.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("locations");
        }
    }
}