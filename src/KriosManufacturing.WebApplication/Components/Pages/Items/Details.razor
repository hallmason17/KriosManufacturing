@page "/items/{ItemId:int}"
@using KriosManufacturing.Core.Models
@inject HttpClient Http

<PageTitle>Item</PageTitle>


@if (_item == null)
{
    <h1>Item @ItemId</h1>
    <p>
    <em>Loading...</em>
</p>
}
else
{
        <MudButton Class="my-5" Href="/items" Variant="Variant.Filled" Color="Color.Tertiary">
            <MudIcon Size="Size.Small" Icon="@Icons.Material.Outlined.ArrowBack" />
            All items
        </MudButton>
        <h1 class="mb-5">Item @_item.Sku</h1>

    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudTextField ReadOnly="true" Label="Sku" @bind-Value="_item.Sku" />
                <MudTextField ReadOnly="true" Label="Name" Class="mt-3" @bind-Value="_item.Name" />
                <MudTextField ReadOnly="true" Label="Description" Class="mt-3" @bind-Value="_item.Description" />
            </MudCardContent>
            <MudCardActions>
                <MudButton Href="@($"/items/{_item.Id}/edit")" Variant="Variant.Filled" Color="Color.Secondary"
                    Class="ml-auto">Edit item</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
}

@code {
    [Parameter] public int ItemId { get; set; }
    private Item? _item;

    protected override async Task OnInitializedAsync()
    {
        _item = await Http.GetFromJsonAsync<Item>($"/api/v1/items/{ItemId}");
    }

}